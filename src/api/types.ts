/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/people/info/save": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["save"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/account/verification/{phoneNumber}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["verificationInitialisation"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/account/verification/{phoneNumber}/{code}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["verification"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/account/save": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["save_1"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/people/info/find/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findById"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        PeopleInfo: {
            /** Format: uuid */
            id?: string;
            firstName?: string;
            lastName?: string;
            /** Format: date-time */
            dateOfBirth?: string;
            /** @enum {string} */
            gender?: "MALE" | "FEMALE";
            secondName?: string;
        };
        Account: {
            /** Format: uuid */
            id?: string;
            peopleInfo?: components["schemas"]["PeopleInfo"];
            permission?: components["schemas"]["Permission"];
            phoneNumber?: string;
            email?: string;
            password?: string;
            messageReceived?: components["schemas"]["Message"][];
            /** Format: int32 */
            accountPermission?: number;
        };
        Attachement: {
            /** Format: int64 */
            id?: number;
            /** Format: url */
            url?: string;
            type?: string;
        };
        Message: {
            /** Format: int64 */
            id?: number;
            sender?: components["schemas"]["Account"];
            /** Format: date-time */
            sendDateTime?: string;
            object?: string;
            body?: string;
            attachement?: components["schemas"]["Attachement"];
        };
        Permission: {
            /** Format: int32 */
            id?: number;
            /** @enum {string} */
            permissionType?: "ADMIN" | "USER";
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    save: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PeopleInfo"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": string;
                };
            };
        };
    };
    verificationInitialisation: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                phoneNumber: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": string;
                };
            };
        };
    };
    verification: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                phoneNumber: string;
                code: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": string;
                };
            };
        };
    };
    save_1: {
        parameters: {
            query?: never;
            header: {
                uuid: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Account"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": string;
                };
            };
        };
    };
    findById: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PeopleInfo"];
                };
            };
        };
    };
}
